  openapi: "3.0.3"
  info:
    title: Bank of Mada
    version: "1.0"
  servers:
    - url: https://bankOfMada.com
  paths:
    /accounts:
      get:
        tags:
          - "Account"
        summary: Retrieve account list
        operationId: getAccounts
        responses:
          200:
            description: Successfully retrieve the account list
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Account'
                example:
                  - id: "123456"
                    firstName: "John"
                    lastName: "Doe"
                    dateOfBirth: "1990-05-15"
                    monthlySalary: 2500.0
                    accountNumber: "ABC123456789"
                  - id: "789012"
                    firstName: "Alice"
                    lastName: "Smith"
                    dateOfBirth: "1985-10-20"
                    monthlySalary: 3000.0
                    accountNumber: "XYZ789012345"

          400:
            $ref: '#/components/responses/SpecificResponse400'
          403:
            $ref: '#/components/responses/SpecificResponse403'
          500:
            $ref: '#/components/responses/SpecificResponse500'

      post:
        tags:
          - "Account"
        summary: Create a new bank account
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    clientLastName:
                      type: string
                    clientFirstName:
                      type: string
                    clientDateOfBirth:
                      type: string
                      format: date
                    monthlyNetSalary:
                      type: number
                    accountNumber:
                      type: string
        responses:
            '201':
              description: Account created successfully
            400:
              $ref: '#/components/responses/SpecificResponse400'
            403:
              $ref: '#/components/responses/SpecificResponse403'
            500:
              $ref: '#/components/responses/SpecificResponse500'

    /accounts/{accountId}:
      get:
        tags:
          - "Account"
        summary: Get details of a specific account
        operationId: getAccountDetails
        parameters:
          - in: path
            name: accountId
            required: true
            description: Account ID to retrieve
            schema:
              type: string
        responses:
          200:
            description: Account details successfully retrieved
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Account'
                example:
                  id: "123456"
                  firstName: "John"
                  lastName: "Doe"
                  dateOfBirth: "1990-05-15"
                  monthlySalary: 2500.0
                  accountNumber: "ABC123456789"
          400:
            $ref: '#/components/responses/SpecificResponse400'
          403:
            $ref: '#/components/responses/SpecificResponse403'
          500:
            $ref: '#/components/responses/SpecificResponse500'

      put:
        tags:
          - "Account"
        summary: Modify account informations
        operationId: updateAccount
        parameters:
          - in: path
            name: accountId
            required: true
            description: Account ID to be modified
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        responses:
          200:
            description: Account successfully modified
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Account'
                example:
                  id: "123456"
                  firstName: "John"
                  lastName: "Doe"
                  dateOfBirth: "1990-05-15"
                  monthlySalary: 3000.0
                  accountNumber: "ABC123456789"

          400:
            $ref: '#/components/responses'
          403:
            $ref: '#/components/responses/SpecificResponse403'
          500:
            $ref: '#/components/responses/SpecificResponse500'

      delete:
        tags:
          - "Account"
        summary: Delete an account
        operationId: deleteAccount
        parameters:
          - in: path
            name: accountId
            required: true
            description: Account ID to be deleted
            schema:
              type: string
        responses:
          200:
            description: Account successfully deleted
          400:
            $ref: '#/components/responses'
          403:
            $ref: '#/components/responses/SpecificResponse403'
          500:
            $ref: '#/components/responses/SpecificResponse500'

    /accounts/{accountId}/withdrawals:
      post:
        tags:
          - "Account"
        summary: Making a withdrawal from an account
        operationId: makeWithdrawal
        parameters:
          - in: path
            name: accountId
            required: true
            description: Account ID for withdrawal
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalRequest'
        responses:
          '200':
            description: Withdrawal successfully completed
          400:
            $ref: '#/components/responses/SpecificResponse400'
          403:
            $ref: '#/components/responses/SpecificResponse403'
          500:
            $ref: '#/components/responses/SpecificResponse500'

    /accounts/{accountId}/balance:
      get:
        tags:
          - "Account"
        summary: Obtain account balance
        operationId: getAccountBalance
        parameters:
          - in: path
            name: accountId
            required: true
            description: Account ID for balance
            schema:
              type: string
        responses:
          200:
            description: Account balance successfully recovered
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Account'
                example:
                  id: "123456"
                  firstName: "John"
                  lastName: "Doe"
                  dateOfBirth: "1990-05-15"
                  monthlySalary: 2500.0
                  accountNumber: "ABC123456789"
          400:
            $ref: '#/components/responses/SpecificResponse400'
          403:
            $ref: '#/components/responses/SpecificResponse403'
          500:
            $ref: '#/components/responses/SpecificResponse500'

    /transactions/{transactionId}/categories:
      put:
        tags:
          - "Transaction"
        summary: Categorize a banking transaction
        operationId: categorizeTransaction
        parameters:
          - in: path
            name: transactionId
            required: true
            description: ID of banking operation to be categorized
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: string
                  comment:
                    type: string
        responses:
          '200':
            description: Banking operation successfully categorized
          400:
            $ref: '#/components/responses/SpecificResponse400'
          403:
            $ref: '#/components/responses/SpecificResponse403'
          500:
            $ref: '#/components/responses/SpecificResponse500'
    /dashboard:
      get:
        tags:
          - "Dashboard"
        summary: Get the customer's dashboard
        operationId: getClientDashboard
        parameters:
          - in: query
            name: period
            required: false
            description: "Period for which to obtain the dashboard (default: month)"
            schema:
              type: string
        responses:
          '200':
            description: Customer dashboard successfully recovered
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    categoryPieChart:
                      type: object
                      additionalProperties:
                        type: number
                      example:
                        Alimentation: 300
                        Loisirs: 150
                        Autre: 50
                    incomeVsExpenseChart:
                      type: object
                      properties:
                        income:
                          type: number
                        expense:
                          type: number
                      example:
                        income: 1000
                        expense: 500
          400:
            $ref: '#/components/responses'
          403:
            $ref: '#/components/responses/SpecificResponse403'
          500:
            $ref: '#/components/responses/SpecificResponse500'
  components:
    schemas:
      Account:
        type: object
        properties:
          id:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          dateOfBirth:
            type: string
            format: date
          monthlySalary:
            type: number
          accountNumber:
            type: string
        required:
          - firstName
          - lastName
          - dateOfBirth
          - monthlySalary
          - accountNumber

      WithdrawalRequest:
        type: object
        properties:
          amount:
            type: number
          dateTime:
            type: string
            format: date-time
        required:
          - amount
          - dateTime

    responses:
      DefaultResponse:
        description: Default responses
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: object
                  properties:
                    code:
                      type: integer
                    message:
                      type: string
                body:
                  type: object

      SpecificResponse400:
        description: Bad Request
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/responses/DefaultResponse'
                - type: object
                - properties:
                    status:
                      properties:
                        code:
                          default: 400
                        message:
                          default: "Bad Request"
                    body:
                      example: { }


      SpecificResponse403:
        description: Forbidden
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/responses/DefaultResponse'
                - type: object
                - properties:
                    status:
                      type: object
                      properties:
                        code:
                          default: 403
                        message:
                          default: "Forbidden"
                    body:
                      example: {}
      SpecificResponse500:
        description: Internal Server Error
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/responses/DefaultResponse'
                - type: object
                - properties:
                    status:
                      properties:
                        code:
                          default: 500
                        message:
                          default: "Internal Server Error"
                    body:
                      example: {}
